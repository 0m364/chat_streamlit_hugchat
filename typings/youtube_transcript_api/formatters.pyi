"""
This type stub file was generated by pyright.
"""

class Formatter:
    """Formatter should be used as an abstract base class.

    Formatter classes should inherit from this class and implement
    their own .format() method which should return a string. A
    transcript is represented by a List of Dictionary items.
    """
    def format_transcript(self, transcript, **kwargs):
        ...
    
    def format_transcripts(self, transcripts, **kwargs):
        ...
    


class PrettyPrintFormatter(Formatter):
    def format_transcript(self, transcript, **kwargs): # -> str:
        """Pretty prints a transcript.

        :param transcript:
        :return: A pretty printed string representation of the transcript.'
        :rtype str
        """
        ...
    
    def format_transcripts(self, transcripts, **kwargs): # -> str:
        """Pretty prints a list of transcripts.

        :param transcripts:
        :return: A pretty printed string representation of the transcripts.'
        :rtype str
        """
        ...
    


class JSONFormatter(Formatter):
    def format_transcript(self, transcript, **kwargs): # -> str:
        """Converts a transcript into a JSON string.

        :param transcript:
        :return: A JSON string representation of the transcript.'
        :rtype str
        """
        ...
    
    def format_transcripts(self, transcripts, **kwargs): # -> str:
        """Converts a list of transcripts into a JSON string.

        :param transcripts:
        :return: A JSON string representation of the transcript.'
        :rtype str
        """
        ...
    


class TextFormatter(Formatter):
    def format_transcript(self, transcript, **kwargs): # -> LiteralString:
        """Converts a transcript into plain text with no timestamps.

        :param transcript:
        :return: all transcript text lines separated by newline breaks.'
        :rtype str
        """
        ...
    
    def format_transcripts(self, transcripts, **kwargs): # -> LiteralString:
        """Converts a list of transcripts into plain text with no timestamps.

        :param transcripts:
        :return: all transcript text lines separated by newline breaks.'
        :rtype str
        """
        ...
    


class _TextBasedFormatter(TextFormatter):
    def format_transcript(self, transcript, **kwargs):
        """A basic implementation of WEBVTT/SRT formatting.

        :param transcript:
        :reference: 
        https://www.w3.org/TR/webvtt1/#introduction-caption
        https://www.3playmedia.com/blog/create-srt-file/
        """
        ...
    


class SRTFormatter(_TextBasedFormatter):
    ...


class WebVTTFormatter(_TextBasedFormatter):
    ...


class FormatterLoader:
    TYPES = ...
    class UnknownFormatterType(Exception):
        def __init__(self, formatter_type) -> None:
            ...
        
    
    
    def load(self, formatter_type=...): # -> JSONFormatter | PrettyPrintFormatter | TextFormatter | WebVTTFormatter | SRTFormatter:
        """
        Loads the Formatter for the given formatter type.

        :param formatter_type:
        :return: Formatter object
        """
        ...
    


